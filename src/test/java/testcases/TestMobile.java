package testcases;

import core.Driver;
import io.appium.java_client.AppiumDriver;
import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.remote.DesiredCapabilities;
import programas.Calculadora;

import java.io.IOException;
import java.net.MalformedURLException;

public class TestMobile {

    private static Driver driver;
    private static AppiumDriver appiumDriver;

        @Before
        public void inicializarTeste () throws MalformedURLException {

           // Driver.iniciarAppium();

            DesiredCapabilities deviceCapabilities = new DesiredCapabilities();

     //       deviceCapabilities.setCapability("platformName", "Android");
     //       deviceCapabilities.setCapability("deviceName", "Redmi5");
     //       deviceCapabilities.setCapability("deviceID", "023c69fc0005");
     //        deviceCapabilities.setCapability("automationName", "uiautomator2");
     //        deviceCapabilities.setCapability("appPackage", "com.google.android.calculator");
     //        deviceCapabilities.setCapability("appActivity", "com.android.calculator2.Calculator");

            deviceCapabilities.setCapability("platformName", "Android");
            deviceCapabilities.setCapability("deviceName", "Redmi5");
            deviceCapabilities.setCapability("deviceID", "emulator-5554");
            deviceCapabilities.setCapability("automationName", "uiautomator2");
            deviceCapabilities.setCapability("appPackage", "com.google.android.calculator");
            deviceCapabilities.setCapability("appActivity", "com.android.calculator2.Calculator");

            appiumDriver =  Driver.inicializarDriver("http://0.0.0.0:4723/wd/hub/", deviceCapabilities);

        }

    @After
    public void finalizarTeste(){
        appiumDriver.quit();
        Driver.encerrarAppium();

    }

    @Test
    public void TesteSomaPositivo() {
            Calculadora calculadora = new Calculadora(appiumDriver);
        try {
            Assert.assertEquals( "Valor esperado:", 5, calculadora.operacao("Soma", "SomaPositivo", 2, 3));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @Test
    public void TesteSomaDezena() {
        Calculadora calculadora = new Calculadora(appiumDriver);
        try {
            Assert.assertEquals( "Valor esperado:", 87, calculadora.operacao("Soma", "SomaDezena", 12, 75));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @Test
    public void TesteSubtracaoPositiva() {
        Calculadora calculadora = new Calculadora(appiumDriver);
        try {
            Assert.assertEquals("Valor esperado:", 17, calculadora.operacao("Subtracao", "SubtracaoPositiva", 42, -25));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

     @Test
     public void TesteSubtracaoNegativa() {
            Calculadora calculadora = new Calculadora(appiumDriver);
         try {
             Assert.assertEquals("Valor esperado:", 17, calculadora.operacao("Subtracao", "SubtracaoNegativa",  -87, 24));
         } catch (IOException e) {
             e.printStackTrace();
         }
     }

}






















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































